plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.google.cloud.tools.jib' version '3.1.4'
}

group = 'com.trafegus'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jib {
	from {
		image = 'openjdk:17-alpine'
	}
	to {
		image = 'USUARIO-DO-DOCKER-HUB/NOME-DA-IMAGEM'
		tags = ['VERSAO-DA-IMAGEM']
	}
	container {
		jvmFlags = ['-Xmx512m', '-Xms256m']
	}
}

/* 1. Trocar versão do java na máquina para 17 */
/* 2. Buildar a imagem usando ./gradlew jibDockerBuild */
/* 3. Configurar credenciais do dockerhub */
/* 4. Subir a imagem para o dockerhub usando docker push USUARIO-DO-DOCKER-HUB/NOME-DA-IMAGEM:VERSAO-DA-IMAGEM */

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	implementation "io.jsonwebtoken:jjwt-api:0.11.5"
	implementation "io.jsonwebtoken:jjwt-impl:0.11.5"
	implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"
}

tasks.named('test') {
	useJUnitPlatform()
}
